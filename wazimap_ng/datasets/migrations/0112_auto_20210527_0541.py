# Generated by Django 2.2.13 on 2021-05-27 05:41

from django.db import migrations
from django.db.models import Count


def remove_duplicate_groups(apps, schema_editor):
    Dataset = apps.get_model("datasets", "Dataset")
    DatasetData = apps.get_model("datasets", "DatasetData")

    for dataset in Dataset.objects.all():
        groups = dataset.group_set.all()

        for group in groups.values("name").annotate(gc=Count("name")):
            filtered_group = groups.filter(name=group["name"]).order_by("-created")
            last_updated_group = filtered_group.first()
            if group["gc"] > 1:
                filtered_group.exclude(id=last_updated_group.id).delete()

            subindicators = list(
                DatasetData.objects.filter(dataset=dataset)
                .order_by()
                .values_list(F"data__{group['name']}", flat=True)
                .distinct()
            )

            sorted_list = sorted(
                subindicators, key=lambda x: last_updated_group.subindicators.index(x)
            )

            last_updated_group.subindicators = subindicators
            last_updated_group.save()


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0111_auto_20210322_0740'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_groups),
    ]
